#############################################################################
# Makefile for building: bam
# Generated by qmake (2.01a) (Qt 4.8.0) on: Sun Jan 22 05:14:18 2012
# Project:  bam.pro
# Template: app
# Command: /usr/bin/qmake -spec /usr/share/qt/mkspecs/linux-g++ -o Makefile bam.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt/mkspecs/linux-g++ -I. -I/usr/include/QtCore -I/usr/include/QtNetwork -I/usr/include/QtGui -I/usr/include -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1,--sort-common,--as-needed,-z,relro,--hash-style=gnu -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -lz -lQtGui -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		mainwindow.cpp \
		bamlistobject.cpp \
		bammodel.cpp \
		quazip/zip.c \
		quazip/unzip.c \
		quazip/quazipnewinfo.cpp \
		quazip/quazipfile.cpp \
		quazip/quazip.cpp \
		quazip/quacrc32.cpp \
		quazip/quaadler32.cpp \
		quazip/JlCompress.cpp \
		quazip/ioapi.c \
		settings.cpp moc_mainwindow.cpp \
		moc_bamlistobject.cpp \
		moc_bammodel.cpp \
		moc_quazipfile.cpp \
		moc_settings.cpp \
		qrc_resources.cpp
OBJECTS       = main.o \
		mainwindow.o \
		bamlistobject.o \
		bammodel.o \
		zip.o \
		unzip.o \
		quazipnewinfo.o \
		quazipfile.o \
		quazip.o \
		quacrc32.o \
		quaadler32.o \
		JlCompress.o \
		ioapi.o \
		settings.o \
		moc_mainwindow.o \
		moc_bamlistobject.o \
		moc_bammodel.o \
		moc_quazipfile.o \
		moc_settings.o \
		qrc_resources.o
DIST          = /usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/common/gcc-base.conf \
		/usr/share/qt/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt/mkspecs/common/g++-base.conf \
		/usr/share/qt/mkspecs/common/g++-unix.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/release.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		bam.pro
QMAKE_TARGET  = bam
DESTDIR       = 
TARGET        = bam

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_mainwindow.h ui_installationProgress.h ui_settings.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: bam.pro  /usr/share/qt/mkspecs/linux-g++/qmake.conf /usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/common/gcc-base.conf \
		/usr/share/qt/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt/mkspecs/common/g++-base.conf \
		/usr/share/qt/mkspecs/common/g++-unix.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/release.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtNetwork.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt/mkspecs/linux-g++ -o Makefile bam.pro
/usr/share/qt/mkspecs/common/unix.conf:
/usr/share/qt/mkspecs/common/linux.conf:
/usr/share/qt/mkspecs/common/gcc-base.conf:
/usr/share/qt/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt/mkspecs/common/g++-base.conf:
/usr/share/qt/mkspecs/common/g++-unix.conf:
/usr/share/qt/mkspecs/qconfig.pri:
/usr/share/qt/mkspecs/modules/qt_phonon.pri:
/usr/share/qt/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt/mkspecs/features/qt_functions.prf:
/usr/share/qt/mkspecs/features/qt_config.prf:
/usr/share/qt/mkspecs/features/exclusive_builds.prf:
/usr/share/qt/mkspecs/features/default_pre.prf:
/usr/share/qt/mkspecs/features/release.prf:
/usr/share/qt/mkspecs/features/default_post.prf:
/usr/share/qt/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt/mkspecs/features/warn_on.prf:
/usr/share/qt/mkspecs/features/qt.prf:
/usr/share/qt/mkspecs/features/unix/thread.prf:
/usr/share/qt/mkspecs/features/moc.prf:
/usr/share/qt/mkspecs/features/resources.prf:
/usr/share/qt/mkspecs/features/uic.prf:
/usr/share/qt/mkspecs/features/yacc.prf:
/usr/share/qt/mkspecs/features/lex.prf:
/usr/share/qt/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtNetwork.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt/mkspecs/linux-g++ -o Makefile bam.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/bam1.0.0 || $(MKDIR) .tmp/bam1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/bam1.0.0/ && $(COPY_FILE) --parents mainwindow.h bamlistobject.h bammodel.h quazip/zip.h quazip/unzip.h quazip/quazipnewinfo.h quazip/quazipfileinfo.h quazip/quazipfile.h quazip/quazip.h quazip/quacrc32.h quazip/quachecksum32.h quazip/quaadler32.h quazip/JlCompress.h quazip/ioapi.h quazip/crypt.h settings.h .tmp/bam1.0.0/ && $(COPY_FILE) --parents resources/resources.qrc .tmp/bam1.0.0/ && $(COPY_FILE) --parents main.cpp mainwindow.cpp bamlistobject.cpp bammodel.cpp quazip/zip.c quazip/unzip.c quazip/quazipnewinfo.cpp quazip/quazipfile.cpp quazip/quazip.cpp quazip/quacrc32.cpp quazip/quaadler32.cpp quazip/JlCompress.cpp quazip/ioapi.c settings.cpp .tmp/bam1.0.0/ && $(COPY_FILE) --parents mainwindow.ui installationProgress.ui settings.ui .tmp/bam1.0.0/ && (cd `dirname .tmp/bam1.0.0` && $(TAR) bam1.0.0.tar bam1.0.0 && $(COMPRESS) bam1.0.0.tar) && $(MOVE) `dirname .tmp/bam1.0.0`/bam1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/bam1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp moc_bamlistobject.cpp moc_bammodel.cpp moc_quazipfile.cpp moc_settings.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_bamlistobject.cpp moc_bammodel.cpp moc_quazipfile.cpp moc_settings.cpp
moc_mainwindow.cpp: quazip/JlCompress.h \
		quazip/quazip.h \
		quazip/zip.h \
		quazip/ioapi.h \
		quazip/unzip.h \
		quazip/quazipfileinfo.h \
		quazip/quazipfile.h \
		quazip/quazipnewinfo.h \
		settings.h \
		bammodel.h \
		bamlistobject.h \
		ui_installationProgress.h \
		mainwindow.h
	/usr/bin/moc $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_bamlistobject.cpp: bamlistobject.h
	/usr/bin/moc $(DEFINES) $(INCPATH) bamlistobject.h -o moc_bamlistobject.cpp

moc_bammodel.cpp: bamlistobject.h \
		ui_installationProgress.h \
		quazip/JlCompress.h \
		quazip/quazip.h \
		quazip/zip.h \
		quazip/ioapi.h \
		quazip/unzip.h \
		quazip/quazipfileinfo.h \
		quazip/quazipfile.h \
		quazip/quazipnewinfo.h \
		settings.h \
		bammodel.h
	/usr/bin/moc $(DEFINES) $(INCPATH) bammodel.h -o moc_bammodel.cpp

moc_quazipfile.cpp: quazip/quazip.h \
		quazip/zip.h \
		quazip/ioapi.h \
		quazip/unzip.h \
		quazip/quazipfileinfo.h \
		quazip/quazipnewinfo.h \
		quazip/quazipfile.h
	/usr/bin/moc $(DEFINES) $(INCPATH) quazip/quazipfile.h -o moc_quazipfile.cpp

moc_settings.cpp: settings.h
	/usr/bin/moc $(DEFINES) $(INCPATH) settings.h -o moc_settings.cpp

compiler_rcc_make_all: qrc_resources.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_resources.cpp
qrc_resources.cpp: resources/resources.qrc \
		resources/loading.png \
		resources/noPreviewAvaible.png
	/usr/bin/rcc -name resources resources/resources.qrc -o qrc_resources.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h ui_installationProgress.h ui_settings.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h ui_installationProgress.h ui_settings.h
ui_mainwindow.h: mainwindow.ui
	/usr/bin/uic mainwindow.ui -o ui_mainwindow.h

ui_installationProgress.h: installationProgress.ui
	/usr/bin/uic installationProgress.ui -o ui_installationProgress.h

ui_settings.h: settings.ui
	/usr/bin/uic settings.ui -o ui_settings.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

main.o: main.cpp mainwindow.h \
		quazip/JlCompress.h \
		quazip/quazip.h \
		quazip/zip.h \
		quazip/ioapi.h \
		quazip/unzip.h \
		quazip/quazipfileinfo.h \
		quazip/quazipfile.h \
		quazip/quazipnewinfo.h \
		settings.h \
		bammodel.h \
		bamlistobject.h \
		ui_installationProgress.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		quazip/JlCompress.h \
		quazip/quazip.h \
		quazip/zip.h \
		quazip/ioapi.h \
		quazip/unzip.h \
		quazip/quazipfileinfo.h \
		quazip/quazipfile.h \
		quazip/quazipnewinfo.h \
		settings.h \
		bammodel.h \
		bamlistobject.h \
		ui_installationProgress.h \
		ui_mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

bamlistobject.o: bamlistobject.cpp bamlistobject.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bamlistobject.o bamlistobject.cpp

bammodel.o: bammodel.cpp bammodel.h \
		bamlistobject.h \
		ui_installationProgress.h \
		quazip/JlCompress.h \
		quazip/quazip.h \
		quazip/zip.h \
		quazip/ioapi.h \
		quazip/unzip.h \
		quazip/quazipfileinfo.h \
		quazip/quazipfile.h \
		quazip/quazipnewinfo.h \
		settings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bammodel.o bammodel.cpp

zip.o: quazip/zip.c quazip/zip.h \
		quazip/ioapi.h \
		quazip/crypt.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o zip.o quazip/zip.c

unzip.o: quazip/unzip.c quazip/unzip.h \
		quazip/ioapi.h \
		quazip/crypt.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o unzip.o quazip/unzip.c

quazipnewinfo.o: quazip/quazipnewinfo.cpp quazip/quazipnewinfo.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o quazipnewinfo.o quazip/quazipnewinfo.cpp

quazipfile.o: quazip/quazipfile.cpp quazip/quazipfile.h \
		quazip/quazip.h \
		quazip/zip.h \
		quazip/ioapi.h \
		quazip/unzip.h \
		quazip/quazipfileinfo.h \
		quazip/quazipnewinfo.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o quazipfile.o quazip/quazipfile.cpp

quazip.o: quazip/quazip.cpp quazip/quazip.h \
		quazip/zip.h \
		quazip/ioapi.h \
		quazip/unzip.h \
		quazip/quazipfileinfo.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o quazip.o quazip/quazip.cpp

quacrc32.o: quazip/quacrc32.cpp quazip/quacrc32.h \
		quazip/quachecksum32.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o quacrc32.o quazip/quacrc32.cpp

quaadler32.o: quazip/quaadler32.cpp quazip/quaadler32.h \
		quazip/quachecksum32.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o quaadler32.o quazip/quaadler32.cpp

JlCompress.o: quazip/JlCompress.cpp quazip/JlCompress.h \
		quazip/quazip.h \
		quazip/zip.h \
		quazip/ioapi.h \
		quazip/unzip.h \
		quazip/quazipfileinfo.h \
		quazip/quazipfile.h \
		quazip/quazipnewinfo.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o JlCompress.o quazip/JlCompress.cpp

ioapi.o: quazip/ioapi.c quazip/ioapi.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ioapi.o quazip/ioapi.c

settings.o: settings.cpp settings.h \
		ui_settings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o settings.o settings.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_bamlistobject.o: moc_bamlistobject.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_bamlistobject.o moc_bamlistobject.cpp

moc_bammodel.o: moc_bammodel.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_bammodel.o moc_bammodel.cpp

moc_quazipfile.o: moc_quazipfile.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_quazipfile.o moc_quazipfile.cpp

moc_settings.o: moc_settings.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_settings.o moc_settings.cpp

qrc_resources.o: qrc_resources.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_resources.o qrc_resources.cpp

####### Install

install_installfiles: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/usr/bin/ || $(MKDIR) $(INSTALL_ROOT)/usr/bin/ 
	-$(INSTALL_PROGRAM) /home/bender/moje_programy/c++/bam/bam $(INSTALL_ROOT)/usr/bin/


uninstall_installfiles:  FORCE
	-$(DEL_FILE) -r $(INSTALL_ROOT)/usr/bin/bam
	-$(DEL_DIR) $(INSTALL_ROOT)/usr/bin/ 


install:  install_installfiles  FORCE

uninstall: uninstall_installfiles   FORCE

FORCE:

